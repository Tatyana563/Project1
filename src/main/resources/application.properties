logging.file=d:/logs/log.log

logging.file.max-size:1KB
logging.file.max-backup-index:3
#logging.file.max-history:3

logging.level.org.springframework.web=DEBUG
logging.level.com.example.demo.controller=DEBUG
#указываем максимальный размер лога. При превышении размера, начнет писаться новый файл
log4j.appender.file.MaxFileSize=10KB
#указываем количество старых файлов логов, которые надо хранить.
log4j.appender.file.MaxBackupIndex=2

spring.datasource.url=jdbc:postgresql://localhost:5432/Architecture
spring.datasource.username=postgres
spring.datasource.password=apple25
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect